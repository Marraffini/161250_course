{
  "hash": "b4a53369780bfb83b99fa992c2e1c262",
  "result": {
    "markdown": "---\ntitle: \"Chapter 5 Workshop\"\n---\n\n::: {.cell}\n\n:::\n\n\n# Dataset `Toxaemia`\n\nThis dataset is from the `vcdExtra` package. Two signs of *toxaemia*, an abnormal condition during pregnancy characterized by high blood pressure (hypertension) and high levels of protein in the urine. If untreated, both the mother and baby are at risk of complications or death. The dataset `Toxaemia` represents 13384 expectant mothers in Bradford, England in their first pregnancy, who were also classified according to social class and the number of cigarettes smoked per day.\n\nThe dataset is a 5 x 3 x 2 x 2 contingency table, with 60 observations on the following 5 variables:\n\n`class` - Social class of mother, a factor with levels: 1, 2, 3, 4, 5\n\n`smoke` - Cigarettes smoked per day during pregnancy, a factor with levels: 0, 1-19, 20+\n\n`hyper` - Hypertension level, a factor with levels: Low, High\n\n`urea` - Protein urea level, a factor with levels: Low, High\n\n`Freq` - frequency in each cell, a numeric vector\n\n# Exercise 5.1 {-}\n\nObtain relevant graphical displays for this dataset.\n\n## Bar charts\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(vcdExtra)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(Toxaemia)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nToxaemia |> \n  ggplot() + \n  aes(x=smoke, y=Freq, fill=hyper) + \n  geom_bar(stat='identity')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nToxaemia |> \n  ggplot() + \n  aes(x=smoke, y=Freq, fill=hyper) + \n  geom_bar(stat='identity', \n           position = \"dodge\"\n           )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nToxaemia |> \n  ggplot() + \n  aes(x=smoke, y=Freq, fill=hyper) + \n  geom_bar(stat ='identity', \n           position = \"dodge\") + \n  facet_grid(urea ~ ., scales = \"free\")\n```\n:::\n\n\n## Mosaic type charts\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab.data <- xtabs(Freq ~ smoke + hyper + urea, data=Toxaemia)\n\nplot(tab.data)\n```\n\n```{.r .cell-code}\nmosaic(tab.data, shade=TRUE, legend=TRUE)\n```\n\n```{.r .cell-code}\nassoc(tab.data, shade=TRUE) \n```\n\n```{.r .cell-code}\nstrucplot(tab.data)\n```\n\n```{.r .cell-code}\nsieve(tab.data)\n```\n:::\n\n\nThe full dataset is a 5 x 3 x 2 x 2 contingency table, with 60 observations on the following 5 variables.\nFor this question we will focus on two categorical variables from this dataset, `hyper` and `urea`. This forms a 2 x 2 contingency table since these variables each have two levels. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# subset the data\ntox_2 <- Toxaemia |> \n  dplyr::select(hyper, urea, Freq)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# the tidyverse way\ntox_display <- tox_2 |> \n  pivot_wider(names_from = urea, \n              values_from = Freq,\n              values_fn = sum) |>\n  column_to_rownames( var = \"hyper\") # make values of hyper column row names\n\ntox_display\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     High  Low\nHigh  665 2715\nLow   589 9415\n```\n:::\n\n```{.r .cell-code}\n# xtabs() \n```\n:::\n\n\nTwo signs of *toxaemia*, are high blood pressure (hypertension) and high levels of protein in the urine. We want to ask if in our sample of expectant mothers in Bradford, England, is high blood pressure related to high protein levels? If these two variables are associated this may indicate the presence of toxaemia in the sample, if they are independent toxaemia may not be present. \n\nWe can test this question using a Chi-squared test.\n\nThe null hypothesis of the chi-squared these is that the two variables are independent and the alternative hypothesis is that the two variables are not independent.\n\nOur null hypothesis is that Hypertension level and the Protein urea level in expectant mothers in Bradford, England are independent. \n\nOur alternative hypothesis that Hypertension level and the Protein urea level in expectant mothers in Bradford, England are *not* independent. \n\nSet our alpha = 0.05\n\n::: {.cell}\n\n```{.r .cell-code}\nchisq.test(tox_display)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test with Yates' continuity correction\n\ndata:  tox_display\nX-squared = 563.9, df = 1, p-value < 2.2e-16\n```\n:::\n:::\n\nSince our p-value is less than our alpha level we reject the null hypothesis and conclude that the two variables (hyper & urea) are not independent. We found evidence of an association between hypertension levels and protein in urine levels in our sample of expectant mothers in in Bradford, England.\n\nWe can see the expected counts\n\n::: {.cell}\n\n```{.r .cell-code}\nchisq.test(tox_display)$expected\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         High      Low\nHigh 316.6856 3063.314\nLow  937.3144 9066.686\n```\n:::\n\n```{.r .cell-code}\n# compared to our observed\ntox_display\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     High  Low\nHigh  665 2715\nLow   589 9415\n```\n:::\n\n```{.r .cell-code}\n# total counts 13384\n```\n:::\n\n\n# Exercise 5.2 {-}\n\nThe genetic information of an organism is stored in its Deoxyribonucleic acid (DNA). DNA is a double stranded helix made up of four different nucleotides. These nucleotides differ in which of the four bases Adenine (A), Guanine (G), Cytosine (C), or Thymine (T) they contain. Nucleotides combine to form amino acids which are the building blocks of proteins. Simply put, three nucleotides form an amino acid and the specific order of a combination dictates what amino acid is formed. A simple pattern that we may want to detect in a DNA sequence is that of the nucleotide at position `i+1` based on the nucleotide at position `i`. The nucleotide positional data collected by a researcher in a particular case is given in the following table:\n\n| `i\\(i+1)` | A   | C   | G   | T   |\n|-----------|-----|-----|-----|-----|\n| A         | 622 | 316 | 328 | 536 |\n| C         | 428 | 262 | 204 | 306 |\n| G         | 354 | 294 | 174 | 266 |\n| T         | 396 | 330 | 382 | 648 |\n\nPerform a test of association and then obtain the symmetric plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntabledata <- data.frame(\n  A = c(622, 428, 354, 396),\n  C = c(316, 262, 294, 330),\n  G = c(328, 204, 174, 382),\n  T = c(536, 306, 266, 648), \n  row.names = c(\"A\", \"C\", \"G\", \"T\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchisq.test(tabledata)$exp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         A        C        G        T\nA 554.8409 370.5104 335.3705 541.2781\nC 369.4834 246.7328 223.3322 360.4516\nG 334.9983 223.7044 202.4879 326.8094\nT 540.6774 361.0523 326.8094 527.4608\n```\n:::\n\n```{.r .cell-code}\nchisq.test(tabledata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  tabledata\nX-squared = 153.21, df = 9, p-value < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nchisq.test(tabledata, simulate.p.value = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test with simulated p-value (based on 2000\n\treplicates)\n\ndata:  tabledata\nX-squared = 153.21, df = NA, p-value = 0.0004998\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# if there is an association we can examine patterns \nlibrary(MASS)\ncorresp(tabledata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFirst canonical correlation(s): 0.1443355 \n\n Row scores:\n         A          C          G          T \n-0.1921802 -0.8894387 -1.0334109  1.4453224 \n\n Column scores:\n         A          C          G          T \n-1.1304512 -0.6952989  0.8139424  1.1304056 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(corresp(tabledata, nf=2))\nabline(v=0)\nabline(h=0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#or\nlibrary(FactoMineR)\nCA(tabledata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n**Results of the Correspondence Analysis (CA)**\nThe row variable has  4  categories; the column variable has 4 categories\nThe chi square of independence between the two variables is equal to 153.2146 (p-value =  1.902013e-28 ).\n*The results are available in the following objects:\n\n   name              description                   \n1  \"$eig\"            \"eigenvalues\"                 \n2  \"$col\"            \"results for the columns\"     \n3  \"$col$coord\"      \"coord. for the columns\"      \n4  \"$col$cos2\"       \"cos2 for the columns\"        \n5  \"$col$contrib\"    \"contributions of the columns\"\n6  \"$row\"            \"results for the rows\"        \n7  \"$row$coord\"      \"coord. for the rows\"         \n8  \"$row$cos2\"       \"cos2 for the rows\"           \n9  \"$row$contrib\"    \"contributions of the rows\"   \n10 \"$call\"           \"summary called parameters\"   \n11 \"$call$marge.col\" \"weights of the columns\"      \n12 \"$call$marge.row\" \"weights of the rows\"         \n```\n:::\n:::\n\n\n\n\n# Exercise 5.3 {-}\n\nThe `diamonds` dataset contains the prices and other attributes of almost 54,000 diamonds. Use `?diamonds` to see information for each variable.\n\nWe are interested in whether there is an association between cut and color. Perform a test of association and then obtain the symmetric plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"diamonds\")\nnames(diamonds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"carat\"   \"cut\"     \"color\"   \"clarity\" \"depth\"   \"table\"   \"price\"  \n [8] \"x\"       \"y\"       \"z\"      \n```\n:::\n\n```{.r .cell-code}\n## Some EDA plots\nggplot(diamonds, aes(color))+geom_bar() + facet_wrap(~cut)\n```\n\n```{.r .cell-code}\nggplot(diamonds, aes(color))+geom_bar(aes(fill=cut))\n```\n\n```{.r .cell-code}\nggplot(diamonds, aes(color))+geom_bar(aes(fill=cut))+ facet_wrap(~clarity)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# alternative coding for making a table of data to count observations of each category\ncont.table <- table(diamonds$cut, diamonds$color)\n\n# EDA \ntab.data <- xtabs( ~ cut+color, data = diamonds)\n\n\nplot(tab.data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# A test of association\n# \nchisq.test(tab.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  tab.data\nX-squared = 310.32, df = 24, p-value < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nchisq.test(tab.data)$expected\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           color\ncut                 D         E         F         G         H         I\n  Fair       202.2201  292.4207  284.8094  337.0434  247.8576  161.8357\n  Good       616.2060  891.0657  867.8727 1027.0403  755.2730  493.1467\n  Very Good 1517.5297 2194.4263 2137.3089 2529.2908 1860.0098 1214.4717\n  Premium   1732.1844 2504.8281 2439.6315 2887.0592 2123.1083 1386.2588\n  Ideal     2706.8599 3914.2593 3812.3775 4511.5664 3317.7513 2166.2870\n           color\ncut                  J\n  Fair        83.81313\n  Good       255.39577\n  Very Good  628.96285\n  Premium    717.92970\n  Ideal     1121.89855\n```\n:::\n\n```{.r .cell-code}\nchisq.test(tab.data)$stdres\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           color\ncut                  D          E          F          G          H          I\n  Fair      -2.9944825 -4.4904291  1.8029978 -1.4331431  3.8660384  1.1077538\n  Good       2.0691800  1.6287194  1.6139239 -5.7432258 -2.2103621  1.4368735\n  Very Good -0.1411592  5.5067817  0.7223909 -5.8458749 -1.0304594 -0.3596617\n  Premium   -3.8474818 -4.2965348 -2.8098650  0.8961959  6.4786345  1.3701384\n  Ideal      3.3724986 -0.2567250  0.3138264  8.0472595 -4.9385571 -2.1425443\n           color\ncut                  J\n  Fair       4.0078721\n  Good       3.4785185\n  Very Good  2.2797544\n  Premium    4.0019148\n  Ideal     -8.9392779\n```\n:::\n\n```{.r .cell-code}\nchisq.test(tab.data, simulate.p.value = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test with simulated p-value (based on 2000\n\treplicates)\n\ndata:  tab.data\nX-squared = 310.32, df = NA, p-value = 0.0004998\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# plots below are expecting an xtabs object, additional arguments would have to be added for other data formats\nmosaic(tab.data, shade=TRUE, legend=TRUE)\n```\n\n```{.r .cell-code}\nassoc(tab.data, shade=TRUE) \n```\n\n```{.r .cell-code}\nstrucplot(tab.data, core = struc_assoc, )\n```\n\n```{.r .cell-code}\nsieve(tab.data)\n```\n\n```{.r .cell-code}\nlibrary(gplots)\ngplots::balloonplot(tab.data, main =\"Balloon Plot\", xlab =\"\", ylab=\"\",\n                    label = FALSE, show.margins = FALSE)\n```\n:::\n\n::: {.cell}\n\n:::\n\n-   More R code examples are  [here](../exercises/Chap5more.R)\n",
    "supporting": [
      "ws05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}