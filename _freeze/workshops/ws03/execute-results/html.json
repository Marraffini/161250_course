{
  "hash": "d8d23abe2fbab4be09c00928fadee699",
  "result": {
    "markdown": "---\ntitle: \"Chapter 3 Workshop\"\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n# Distribution functions in R\n\n\nR can be used to calculate the probabilities of any range of numbers occurring from a normal distribution. The probability of drawing a value between $a$ and $b$ is simply the area (i.e. intregral) underneath the density curve between the values $a$ and $b$. We can also use R to get quantile values (i.e., the value below which 90% of values lie), or generate random samples from a normal distribution. \n\n\n![The four R function for the normal probability density function.](../img/r_dist_funs.png){#fig-fourfuncs}\n\nFor any distribution, there are four key R functions, beginning with `q` for 'quantile', `p` for 'probability', `d` for 'density, and `r` for 'random'. In @fig-fourfuncs, the four functions are for the normal distribution are shown (`qnorm()`, `pnorm()`, `dnorm()`, and `rnorm()`).\n\nLet's consider `pnorm()`. For this function, you provide a value of `q`, along with a mean (`mean`) and standard deviation (`sd`), and `pnorm()` returns the probability (area) of drawing a value below `q`; i.e., $\\text{P}(X < x)$.\n\nFor example, `pnorm(q = 7, mean = 5, sd = 2)` calculates the probability that a normal random variable (with mean 5 and standard deviation 2) has a value less than 7. In short, it answers the question \"what is $\\text{P}(X < 7)$ when $X \\sim \\text{N}(\\mu=5, \\sigma=2)$?\" \n\nHere's a plot of the distribution:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# create a tibble (data frame) of x values and corresponding density values\ndfs <- tibble(\n  # make x a sequence of numbers going from # -2 to 12 of length 500\n  x = seq(-2, 12, length=500), \n  # calculate the corresponding densities (height of the normal curve) for each x                               \n  `f(x)` = dnorm(x, mean=5, sd=2)\n  )\n\n# make an area plot of x vs f(x)\nps <- ggplot(dfs) + \n  aes(x = x, y = `f(x)`) + \n  geom_area(alpha = 0.4) \n\n# show the plot\nps\n```\n\n::: {.cell-output-display}\n![](ws03_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=50%}\n:::\n:::\n\n\nWe're asking for the coloured area in the plot below:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nps + \n  geom_area(\n    data = dfs |> \n      filter(x < 7),\n    fill=\"coral1\", \n    alpha=.5\n    ) +\n  geom_segment(\n    aes(x =7, \n        xend = 7,\n        y = 0,\n        yend = 0.15\n        )\n    ) + \n  annotate(\n    \"text\",\n    x = 7,\n    y = 0.16,\n    label = \"7\"\n    ) \n```\n\n::: {.cell-output-display}\n![](ws03_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=50%}\n:::\n:::\n\nHow do we get R to calculate this? Simple!\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npnorm(q = 7, mean = 5, sd = 2)\n```\n:::\n\n## Exercise 3.1\n\nLet $X$ be a normally distributed random variable with mean of 10 and standard deviation of 4. \n\nDraw the normal distribution in each case, and shade the area of interest. Then, calculate the following values using R. \n\na.\t$\\text{P}(X < 7)$ \t\t\t\t\t\n\nb.\t$\\text{P}(8.4 < X < 15.7)$\t\t\t\t     \n\nc.\t$\\text{P}(X > 17)$ \t\t\t\t\t\t\t\n\nd.\tFind $x$ such that $\\text{P}(X < x) = 0.2$ (i.e. the 0.2 quantile). Hint: use the `qnorm()` function.\t\n\n\nAnswers are at the end of this document.\n\n# Dataset **`Prestige`**\n\nWe will be using a well-known dataset called `Prestige` from the `car`\tR package.  This dataset deals with prestige ratings of Canadian Occupations. The `Prestige` dataset has 102 rows and 6 columns. The observations are occupations.\n\nThis data frame contains the following columns:\n\n* `education` - Average education of occupational incumbents, years, in 1971.\n\n* `income` - Average income of incumbents, dollars, in 1971.\n\n* `women` - Percentage of incumbents who are women.\n\n*  `prestige` - Pineo-Porter prestige score for occupation, from a social survey conducted in the mid-1960s.\n\n* `census` - Canadian Census occupational code.\n\n*  `type` - Type of occupation. A factor with levels: bc, Blue Collar; prof, Professional, Managerial, and Technical; wc, White Collar. (includes four missing values).\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n## Exercise 3.2 {-}\n\nFor a standard normal variable $z$ , obtain the area between  -1.8 and 2.1.  \n \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npnorm(2.1, mean=0, sd=1) - pnorm(-1.8, mean=0, sd=1)\n```\n:::\n\n\nNote that the `mean=0`, `sd=1` are the defaults for `pnorm` function, so don't need to be specified.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npnorm(2.1) - pnorm(-1.8)\n```\n:::\n\n\n\n## Exercise 3.3 {-}\n\nPlot the `prestige` scores data as a histogram and show the theoretical normal curve fitted to the data. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(car)\n\nPrestige |> \n  ggplot() + \n  aes(prestige) +\n  geom_histogram(aes(y = after_stat(density)), bins=10) +\n  stat_function(\n    fun = dnorm,\n    args = list(mean = mean(Prestige$prestige),\n                sd = sd(Prestige$prestige) ), \n    geom = \"line\")\n```\n:::\n\n\nLet's try a square-root transformation\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(car)\n\nPrestige |> \n  ggplot() + \n  aes(sqrt(prestige)) +\n  geom_histogram(aes(y=after_stat(density)), bins=10) +\n  stat_function(\n    fun = dnorm,\n    args = list(mean = mean(sqrt(Prestige$prestige)),\n                sd = sd(sqrt(Prestige$prestige)) ), \n    geom = \"line\") +\n  ggtitle(\"Square-root prestige\")\n```\n:::\n\n\n\n## Exercise 3.4 {-}\n\nLet's look at the `prestige` scores variable to see how well it conforms with a normal distribution. \n\nFirst, make a normal quantile plot.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nPrestige |> \n  ggplot() + \n  aes(sample=prestige) + \n  stat_qq() + \n  stat_qq_line()\n```\n:::\n\nThe x-axis are theoretical quantiles of a normal distribution; the y-axis are the quantiles of the actual data. \n\nIf the data conformed perfectly to a normal distribution, the points would lie perfectly along the line. \n\nThe above plot shows that these data conform pretty well to the normal. There is very often some departure in the 'tails' at either end, like there is here. Here's a plot of data that were *actually simulated from a normal distribution* for comparison:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(111)\n\ndata.frame(\n  x = rnorm(\n    n = nrow(Prestige),\n    mean = mean(Prestige$prestige), \n    sd = sd(Prestige$prestige)\n    )\n  ) |> \n  ggplot() + \n  aes(sample = x) + \n  stat_qq() + \n  stat_qq_line()\n```\n\n::: {.cell-output-display}\n![](ws03_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=50%}\n:::\n:::\n\n\nNow, we'll do some tests for whether `prestige` scores show a \"significant\" departure from the normal distribution.\n\nThe null hypothesis is that the data came from a normal distribution. A small *p*-value (say, < 0.05) would lead us to reject the null hypothesis and conclude that the data are unlikely to have come from a normal distribution. A large *p*-value (> 0.05) means we have no evidence of non-normality. \n\nFirst, the Shapiro-Wilk test.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nshapiro.test(Prestige$prestige)\n```\n:::\n\nHere, the null hypothesis is rejected, so the data are unlikely to have come from a normal. \n\nThe Kolmogorov-Smirnov test can also be used to test for departure from a theoretical distribution. K-S differs from Shapiro-Wilk in that you specify the mean and SD of the distribution. Let's say someone made the claim that prestige was normally distributed with a mean of 50 and a standard deviation of 17. We can test this like so:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nks.test(Prestige$prestige, \"pnorm\", 50, 17)\n```\n:::\n\nWe reject the null hypothesis and conclude that there is evidence against this claim. \n\nAt any rate, I don't believe in \"true\" distributions. Would I feel comfortable assuming that these data came from a normal distribution? Possibly. It all depends on the context. Remember, there are no true models, only useful ones.\n\nLet's see if the square root-transformed `prestige` looks normal. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nshapiro.test(sqrt(Prestige$prestige))\n```\n:::\n\n\nNo significant departure from normality for the sqrt-transformed data.\n\n\n# Answers to Exercise 3.1\n\n$X \\sim \\text{N}(10,4)$\n\na.\t$\\text{P}(X < 7)$ \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npnorm(q=7, mean=10, sd=4)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndfs <- tibble(\n  x=seq(-5, 25, length=500), \n  `f(x)` = dnorm(x, mean=10, sd=4)\n  ) \n\ngp <- ggplot(dfs) + \n  aes(x = x, y = `f(x)`) + \n  geom_area(alpha = 0.4) \n\ngp + \n  geom_area(\n    data = dfs |> \n      filter(x < 7),\n    fill=\"coral1\"\n    ) \n```\n\n::: {.cell-output-display}\n![](ws03_files/figure-html/unnamed-chunk-18-1.png){fig-align='center' width=50%}\n:::\n:::\n\n\n\nb.\t$\\text{P}(8.4 < X < 15.7)$\t\t\t\t     \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np_between_8.4_and_15.7 <- \n  gp + \n  geom_area(\n    data = dfs |> \n      filter(x < 15.7 & x > 8.4),\n    fill=\"purple\",\n    alpha = 0.5\n    ) +\n  ggtitle(\"P(8.4 < X < 15.7)\")\n\np_lessthan_15.7 <- \n  gp + \n  geom_area(\n    data = dfs |> \n      filter(x < 15.7),\n    fill=\"dodgerblue3\",\n    alpha = 0.5\n    ) +\n  ggtitle(\"P(X < 15.7)\")\n\np_lessthan_8.4 <- \n  gp + \n  geom_area(\n    data = dfs |> \n      filter(x < 8.4),\n    fill=\"coral1\"\n    ) +\n  ggtitle(\"P(X < 8.4)\")\n\n\nlibrary(patchwork)\np_between_8.4_and_15.7 + p_lessthan_15.7 + p_lessthan_8.4\n```\n\n::: {.cell-output-display}\n![](ws03_files/figure-html/unnamed-chunk-19-1.png){fig-align='center' width=50%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npnorm(15.7, 10, 4) - pnorm(8.4, 10, 4)\n```\n:::\n\nWhat we want is the purple area in the left figure above. \n\nWe get this by subtracting the coral area, `pnorm(8.4, 10, 4)` (right figure), from the blue area, `pnorm(15.7, 10, 4)` (middle figure).\n\nc.\t$\\text{P}(X > 17)$ \t\t\t\t\t\t\t\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n1 - pnorm(17, 10, 4)\n\n# or pnorm(17, 10, 4, lower.tail = F)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngp + \n  geom_area(\n    data = dfs |> \n      filter(x > 17),\n    fill=\"coral1\"\n    )\n```\n\n::: {.cell-output-display}\n![](ws03_files/figure-html/unnamed-chunk-22-1.png){fig-align='center' width=50%}\n:::\n:::\n\n\n\nd.\tFind $x$ such that $\\text{P}(X < x) = 0.2$ (i.e. the 0.2 quantile). Hint: use the `qnorm()` function.\t\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nqnorm(p = 0.2, 10, 4)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngp + \n  geom_area(\n    data = dfs |> \n      filter(x < qnorm(p = 0.2, 10, 4)),\n    fill=\"coral1\"\n    ) +\n  geom_segment(\n    aes(x = qnorm(p = 0.2, 10, 4), \n        xend = qnorm(p = 0.2, 10, 4),\n        y = 0,\n        yend = qnorm(p = 0.2, 10, 4) |> dnorm(10, 4)\n        )\n    ) + \n  annotate(\n    \"text\",\n    x = qnorm(p = 0.2, 10, 4),\n    y = qnorm(p = 0.2, 10, 4) |> dnorm(10, 4) + .008,\n    label = qnorm(p = 0.2, 10, 4) |> round(2)\n    ) \n```\n\n::: {.cell-output-display}\n![](ws03_files/figure-html/unnamed-chunk-24-1.png){fig-align='center' width=50%}\n:::\n:::\n\n\n\n\nMore graphing examples are  [here](../exercises/Chap3more.R) (R code file).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "ws03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}