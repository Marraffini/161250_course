{
  "hash": "f53f6c199298917463404d1688cd9c53",
  "result": {
    "markdown": "---\ntitle: \"Midterm Review\"\n---\n\n::: {.cell}\n\n:::\n\n\n## Chapter 3: Probability\nNormal distribution \n\n$X \\sim \\text{N}(8,3)$\n\n$\\text{P}(X < 10)$ \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfs <- tibble(\n  x=seq(-5, 25, length=500), \n  `f(x)` = dnorm(x,  mean=8, sd=3)\n  ) \n\ngp <- ggplot(dfs) + \n  aes(x = x, y = `f(x)`) + \n  geom_area(alpha = 0.4) \n\ngp + \n  geom_area(\n    data = dfs |> \n      filter(x < 10),\n    fill=\"coral1\"\n    ) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(q=10, mean=8, sd=3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7475075\n```\n:::\n:::\n\n\nPoisson Distribution\nThe number of parasites in a host is a Poisson random variable with mean 3.5. What is the probability that there will be at least one parasite in the host? \n\n$Z \\sim \\text{P}(\\lambda = 3.5)$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 - dpois(x=0, lambda=3.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9698026\n```\n:::\n:::\n\nBinomial Distribution\n\nA microbiologist conducts an experiment to create a recombinant strain of bacteria that is resistant to penicillin. She plates out the bacteria on a plate, and picks out 10 colonies. She knows that the probability of successfully creating a recombinant is 0.15.\nGiven $X \\sim \\text{Bin}(n = 10, p = 0.15)$, what is $P(x>0)$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 - dbinom(x=0, size=10, prob=0.15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8031256\n```\n:::\n:::\n\n\n## Chapter 4: Statistical Inference\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl1 <- \"http://www.massey.ac.nz/~anhsmith/data/rangitikei.RData\"\ndownload.file(url = url1, destfile = \"rangitikei.RData\")\nload(\"rangitikei.RData\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ggplot style\nlibrary(ggplot2)\np1 <- ggplot(rangitikei, mapping = aes(people))+\n  geom_histogram(aes(y=..density..), bins=10)\n\np1 + stat_function(fun = dnorm, args=list(mean=mean(rangitikei$people), sd=sd(rangitikei$people)), geom = \"line\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Old style\nqqnorm(rangitikei$people)\nqqline(rangitikei$people)\n```\n\n```{.r .cell-code}\n# ggplot style\nggplot(rangitikei, aes(sample=people))+stat_qq()+stat_qq_line()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# test for normality\nshapiro.test(rangitikei$people)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  rangitikei$people\nW = 0.65346, p-value = 1.382e-07\n```\n:::\n\n```{.r .cell-code}\nks.test(rangitikei$people, \"pnorm\")  # ties\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAsymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  rangitikei$people\nD = 0.99997, p-value < 2.2e-16\nalternative hypothesis: two-sided\n```\n:::\n:::\n\nWhat type of test does each of the following code chucks specify? State a null and alternative hypothesis for each. Interpret results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(rangitikei$people, mu=100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tOne Sample t-test\n\ndata:  rangitikei$people\nt = -1.8824, df = 32, p-value = 0.0689\nalternative hypothesis: true mean is not equal to 100\n95 percent confidence interval:\n  41.1334 102.3211\nsample estimates:\nmean of x \n 71.72727 \n```\n:::\n\n```{.r .cell-code}\n# Null true mean of people is = 100\n# alternative is the true mean of people is not = 100\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(rangitikei$people, mu=100, alternative=\"greater\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tOne Sample t-test\n\ndata:  rangitikei$people\nt = -1.8824, df = 32, p-value = 0.9655\nalternative hypothesis: true mean is greater than 100\n95 percent confidence interval:\n 46.28578      Inf\nsample estimates:\nmean of x \n 71.72727 \n```\n:::\n\n```{.r .cell-code}\n# Null true mean of people is less than or equal to 100\n# alternative is the true mean of people is greater than 100\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(rangitikei$people~factor(rangitikei$time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  rangitikei$people by factor(rangitikei$time)\nt = -3.1677, df = 30.523, p-value = 0.003478\nalternative hypothesis: true difference in means between group 1 and group 2 is not equal to 0\n95 percent confidence interval:\n -102.28710  -22.13049\nsample estimates:\nmean in group 1 mean in group 2 \n       22.71429        84.92308 \n```\n:::\n\n```{.r .cell-code}\nt.test(people~factor(time), data = rangitikei, var.equal = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tTwo Sample t-test\n\ndata:  people by factor(time)\nt = -1.7466, df = 31, p-value = 0.0906\nalternative hypothesis: true difference in means between group 1 and group 2 is not equal to 0\n95 percent confidence interval:\n -134.84849   10.43091\nsample estimates:\nmean in group 1 mean in group 2 \n       22.71429        84.92308 \n```\n:::\n:::\n\n\nTransformations\n\nAccording to this boxcox figure what is the most appropriate transformation to try first.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lindia)\ngg_boxcox(lm(rangitikei$people~1))\n```\n:::\n\nHow would you perform this transformation for a ttest?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrep_sq_people <- (-1-sqrt(rangitikei$people))\nt.test(rep_sq_people, mu=100, alternative=\"greater\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tOne Sample t-test\n\ndata:  rep_sq_people\nt = -156.53, df = 32, p-value = 1\nalternative hypothesis: true mean is greater than 100\n95 percent confidence interval:\n -9.680899       Inf\nsample estimates:\nmean of x \n  -8.5067 \n```\n:::\n\n```{.r .cell-code}\n# Null true mean of people is less than or equal to 100\n# alternative is the true mean of people is greater than 100\n```\n:::\n\n## Chapter 5: Tabulated Counts\n\n# Exercise 5.2 {-}\n\nThe genetic information of an organism is stored in its Deoxyribonucleic acid (DNA). DNA is a double stranded helix made up of four different nucleotides. These nucleotides differ in which of the four bases Adenine (A), Guanine (G), Cytosine (C), or Thymine (T) they contain. A simple pattern that we may want to detect in a DNA sequence is that of the nucleotide at position `i+1` based on the nucleotide at position `i`. The nucleotide positional data collected by a researcher in a particular case is given in the following table:\n\n| `i\\(i+1)` | A   | C   | G   | T   |\n|-----------|-----|-----|-----|-----|\n| A         | 622 | 316 | 328 | 536 |\n| C         | 428 | 262 | 204 | 306 |\n| G         | 354 | 294 | 174 | 266 |\n| T         | 396 | 330 | 382 | 648 |\n\nPerform a test of association and then obtain the symmetric plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntabledata <- data.frame(\n  A = c(622, 428, 354, 396),\n  C = c(316, 262, 294, 330),\n  G = c(328, 204, 174, 382),\n  T = c(536, 306, 266, 648), \n  row.names = c(\"A\", \"C\", \"G\", \"T\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchisq.test(tabledata)$exp\nchisq.test(tabledata)\nchisq.test(tabledata, simulate.p.value = T)\n\nlibrary(MASS)\ncorresp(tabledata)\nplot(corresp(tabledata, nf=2))\nabline(v=0)\nabline(h=0)\n```\n\n```{.r .cell-code}\n#or\nlibrary(FactoMineR)\nCA(tabledata)\n```\n:::\n\n\n## Test questions\n\n## 21 \nn=5\n\nmean = 158\n\nvar = 20\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#95% ci for the mean\nn <- 5\nmu <- 158\nsd <- sqrt(20)\n\nSE <- sd / sqrt(n)\nSE\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n$$ \n\\bar x \\pm t \\times \\text{se}\n$$\n\nThe $t$ value is the 0.975 quantile of the $t$ distribution with the degrees of freedom given by $n-1$. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nqt(p = 0.975, df = n - 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.776445\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmu + (2.77*SE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 163.54\n```\n:::\n\n```{.r .cell-code}\nmu - (2.77*SE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 152.46\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmu + (qt(p = 0.975, df = n - 1)*SE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 163.5529\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn = 5\ns = sqrt(12)\n\nse = s / sqrt(n) \nse\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.549193\n```\n:::\n:::\n\n\n\n$$ \n\\bar x \\pm t \\times \\text{se}\n$$\nThe $t$ value is the 0.975 quantile of the $t$ distribution with the degrees of freedom given by $n-1$. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nqt(p = 0.975, df = n - 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.776445\n```\n:::\n:::\n\nSo, the sample mean and confidence interval is:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n( xbar <- 161 )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 161\n```\n:::\n\n```{.r .cell-code}\n( xbar - qt(p = 0.975, df = n - 1) * se )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 156.6987\n```\n:::\n\n```{.r .cell-code}\n( xbar + qt(p = 0.975, df = n - 1) * se )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 165.3013\n```\n:::\n:::\n\n\n## 22 Two fertilizers\nn=23\nstand n=12, mu=101, var=18\nnew n=11, mu=124, var=14\n\npooled variance\n\n::: {.cell}\n\n```{.r .cell-code}\n# w1= (n1-1)/\n```\n:::\n\n\n\n## 23\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_fert <- c(124.8, 118.5, 128.8, 117.8, 124.2, 122.3, 114.5, 120.7, 123.9, 119.1, 121.5)\nstand_fert <- c(106.4, 105.5, 103.8, 97.7, 96.5, 91.4, 97.7, 99.6, 97, 92.3, 103.9, 102)\n\nmean(new_fert - stand_fert)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 22.25833\n```\n:::\n\n```{.r .cell-code}\nmean(new_fert) - mean(stand_fert)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 21.9803\n```\n:::\n\n```{.r .cell-code}\n# y+t x S/sqrt(n)\n# \n# n=11\n```\n:::\n",
    "supporting": [
      "midterm_review_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}