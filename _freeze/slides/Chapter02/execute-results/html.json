{
  "hash": "9e9a76dca1199e180ecb378073cc51a2",
  "result": {
    "markdown": "---\ntitle: \"Chapter 2:<br>Exploratory Data Analysis (EDA)\"\nimage: img/pairs.png\nformat: \n  revealjs:\n    width: 1050\n    height:\t700\n    transition: fade\n    theme: [default, myquarto.scss]\n    slide-number: c/t  \n    logo: img/L_Color.png\n    footer: \"[161250 Data Analysis](https://anhsmith.github.io/161250/slides.html)\"\n    styles:\n      - revealjs.dark:\n        background-color: #222\n        color: #fff\nexecute:\n  echo: true\n---\n\n::: {.cell}\n\n:::\n\n\n## Two modes of data analysis\n\n::::{.columns}\n\n:::{.column}\n#### Hypothesis-generating\n\n- \"Exploratory analysis\"\n- Aim is to explore data to discover new patterns\n- Results must not be presented as formal tests of *a priori* hypotheses\n- Testing a hypothesis using the same data that gave rise to the hypothesis is *circular reasoning*\n\n:::\n\n:::{.column}\n#### Hypothesis-testing\n\n- \"Confirmatory analysis\"\n- Aim is to evaluate evidence for specific *a priori* hypotheses\n- The hypotheses and ideas were conceived of *before* the data were observed\n- Can be used for formal scientific inference\n\n:::\n\n::::\n\nPresenting hypothesis-generating analyses as hypothesis-testing analyses (i.e., pretending the hypotheses were conceived prior to the analysis) is scientifically dishonest, and a major contributor to the [replication crisis](https://doi.org/10.1371/journal.pmed.0020124) in science.\n\n\n## Plots for categorical data\n\n### Bar graphs\n\n-   Show the frequency of each category (level) in categorical variables\n-   The height of each bar is proportional to the frequency\n-   Can be \"stacked\" or \"clustered\"\n\n## Tea data\n\nData from 300 individuals' tea-drinking habits (18 questions), perceptions (12 questions), and personal details (4 questions).\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata(tea, package = \"FactoMineR\")\nglimpse(tea)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 300\nColumns: 36\n$ breakfast        <fct> breakfast, breakfast, Not.breakfast, Not.breakfast, b…\n$ tea.time         <fct> Not.tea time, Not.tea time, tea time, Not.tea time, N…\n$ evening          <fct> Not.evening, Not.evening, evening, Not.evening, eveni…\n$ lunch            <fct> Not.lunch, Not.lunch, Not.lunch, Not.lunch, Not.lunch…\n$ dinner           <fct> Not.dinner, Not.dinner, dinner, dinner, Not.dinner, d…\n$ always           <fct> Not.always, Not.always, Not.always, Not.always, alway…\n$ home             <fct> home, home, home, home, home, home, home, home, home,…\n$ work             <fct> Not.work, Not.work, work, Not.work, Not.work, Not.wor…\n$ tearoom          <fct> Not.tearoom, Not.tearoom, Not.tearoom, Not.tearoom, N…\n$ friends          <fct> Not.friends, Not.friends, friends, Not.friends, Not.f…\n$ resto            <fct> Not.resto, Not.resto, resto, Not.resto, Not.resto, No…\n$ pub              <fct> Not.pub, Not.pub, Not.pub, Not.pub, Not.pub, Not.pub,…\n$ Tea              <fct> black, black, Earl Grey, Earl Grey, Earl Grey, Earl G…\n$ How              <fct> alone, milk, alone, alone, alone, alone, alone, milk,…\n$ sugar            <fct> sugar, No.sugar, No.sugar, sugar, No.sugar, No.sugar,…\n$ how              <fct> tea bag, tea bag, tea bag, tea bag, tea bag, tea bag,…\n$ where            <fct> chain store, chain store, chain store, chain store, c…\n$ price            <fct> p_unknown, p_variable, p_variable, p_variable, p_vari…\n$ age              <int> 39, 45, 47, 23, 48, 21, 37, 36, 40, 37, 32, 31, 56, 6…\n$ sex              <fct> M, F, F, M, M, M, M, F, M, M, M, M, M, M, M, M, M, F,…\n$ SPC              <fct> middle, middle, other worker, student, employee, stud…\n$ Sport            <fct> sportsman, sportsman, sportsman, Not.sportsman, sport…\n$ age_Q            <fct> 35-44, 45-59, 45-59, 15-24, 45-59, 15-24, 35-44, 35-4…\n$ frequency        <fct> 1/day, 1/day, +2/day, 1/day, +2/day, 1/day, 3 to 6/we…\n$ escape.exoticism <fct> Not.escape-exoticism, escape-exoticism, Not.escape-ex…\n$ spirituality     <fct> Not.spirituality, Not.spirituality, Not.spirituality,…\n$ healthy          <fct> healthy, healthy, healthy, healthy, Not.healthy, heal…\n$ diuretic         <fct> Not.diuretic, diuretic, diuretic, Not.diuretic, diure…\n$ friendliness     <fct> Not.friendliness, Not.friendliness, friendliness, Not…\n$ iron.absorption  <fct> Not.iron absorption, Not.iron absorption, Not.iron ab…\n$ feminine         <fct> Not.feminine, Not.feminine, Not.feminine, Not.feminin…\n$ sophisticated    <fct> Not.sophisticated, Not.sophisticated, Not.sophisticat…\n$ slimming         <fct> No.slimming, No.slimming, No.slimming, No.slimming, N…\n$ exciting         <fct> No.exciting, exciting, No.exciting, No.exciting, No.e…\n$ relaxing         <fct> No.relaxing, No.relaxing, relaxing, relaxing, relaxin…\n$ effect.on.health <fct> No.effect on health, No.effect on health, No.effect o…\n```\n:::\n:::\n\n\n\n## Bar charts — one variable\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nggplot(tea) +\n  geom_bar(aes(x = price)) + \n  ggtitle(\"Bar chart\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Bar charts — two variables\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nggplot(tea) +\n  geom_bar(\n    aes(x = price, fill = where)\n    ) + \n  ggtitle(\"Stacked bar chart\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nggplot(tea) +\n  geom_bar(\n    aes(x = price, fill = where), \n    position = \"dodge\"\n    ) +\n  ggtitle(\"Clustered bar chart\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n\n## Bar charts - flipped\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nggplot(tea) +\n  geom_bar(\n    aes(x = price, fill = where)\n    ) + \n  ggtitle(\"Stacked bar chart\") +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nggplot(tea) +\n  geom_bar(\n    aes(x = price, fill = where), \n    position = \"dodge\"\n    ) +\n  ggtitle(\"Clustered bar chart\") +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n## Pie charts (yeah nah)\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nggplot(tea) +\n  aes(x = \"\", fill = price) +\n  geom_bar() +\n  coord_polar(\"y\") + \n  xlab(\"\") + ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=576}\n:::\n:::\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nggplot(tea) +\n  aes(x = price) +\n  geom_bar() +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n## Pie charts (yeah nah)\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nggplot(tea) +\n  aes(x = \"\", fill = price) +\n  geom_bar() +\n  coord_polar(\"y\") + \n  xlab(\"\") + ylab(\"\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n-   Pie charts are popular but not usually the best way to show proportional data\n-   Requires comparison of angles or areas of different shapes\n-   Bar charts are almost always better\n\n<https://shiny.massey.ac.nz/anhsmith/demos/explore.counts.of.factors/>\n\n\n## One-dimensional graphs\n\nDotplots and strip charts display one-dimensional data (grouped/ungrouped) and are useful to discover gaps and outliers.\n\nOften used to display experimental design data; not great for very small datasets (\\<20)\n\n\n\n::: {.cell .custom4050 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\ndata(Animals, package = \"MASS\")\n\nggplot(Animals) +\n  aes(x = brain) + \n  geom_dotplot() + \n  scale_y_continuous(NULL, breaks = NULL) +\n  ggtitle(\"Dotplot\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n\n## One-dimensional graphs\n\nDotplots and strip charts display one-dimensional data (grouped/ungrouped) and are useful to discover gaps and outliers.\n\nOften used to display experimental design data; not great for very small datasets (\\<20)\n\n\n\n::: {.cell .custom4050 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\ndata(Animals, package = \"MASS\")\n\nAnimals |> \n  mutate(\n    Animal = fct_reorder(\n      rownames(Animals), \n      brain )\n    ) |> \n  ggplot() +\n  aes( y = Animal, \n       x = brain\n       ) + \n  geom_point() + \n  ylab(\"Animal\") + \n  ggtitle(\"Strip chart\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n## Histograms\n\nDivide the data range into \"bins\", count the occurrences in each bin, and make a bar chart.\n\nY-axis can show raw counts, relative frequencies, or densities\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(1234); dfm <- data.frame(X = rnorm(50, 100))\n\np1 <- ggplot(dfm, aes(X)) + geom_histogram(bins = 20) + ylab(\"count\") + ggtitle(\"Frequency histogram\", \"Heights of the bars sum to n\")\np2 <- ggplot(dfm) + aes(x = X, y = after_stat(count/sum(count))) + geom_histogram(bins = 20) + ylab(\"relative frequency\") +\n  ggtitle(\"Relative frequency histogram\", \"Heights sum to 1\")\np3 <- ggplot(dfm) + aes(x = X, y = after_stat(density)) + geom_histogram(bins = 20) + \n  ggtitle(\"Density histogram\",\"Heights x widths sum to 1\")\n\nlibrary(patchwork); p1+p2+p3\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n\n## Frequency polygon & kernel density plots\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n::::{.columns}\n:::{.column}\n**Histogram**<br>a coarse visualisation of the distribution\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(vital) + aes(Life_female) + \n  geom_histogram(bins = 12) +\n  geom_freqpoly(bins = 12)\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n:::\n\n:::{.column}\n\n**Kernel density**<br>a smooth approximation of the density\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(vital) + aes(Life_female) +\n  geom_histogram(bins = 12, aes(y = after_stat(density))) + \n  geom_density()\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n\n:::\n\n::::\n\n\n## Kernel density estimation (KDE)\n\n![](../img/kde.gif)\n\n## Summary statistics for EDA\n\n<!-- ```{r} -->\n\n<!-- #| fig-width: 8 -->\n\n<!-- #| fig-height: 0.2 -->\n\n<!-- library(tidyverse)  -->\n\n<!-- bind_cols( -->\n\n<!--   Rank = 1:nrow(vital), -->\n\n<!--   \"Sorted Life Expectancy\" = vital$Life_female |> sort() -->\n\n<!-- ) |>  -->\n\n<!--   ggplot() +  -->\n\n<!--   geom_text(aes( -->\n\n<!--     x = Rank,  -->\n\n<!--     y = 1, -->\n\n<!--     label = `Sorted Life Expectancy` -->\n\n<!--     ), -->\n\n<!--     size = 1.75) + -->\n\n<!--   geom_text(aes( -->\n\n<!--     x = Rank,  -->\n\n<!--     y = 2, -->\n\n<!--     label = Rank -->\n\n<!--     ), -->\n\n<!--     size = 1.75) + -->\n\n<!--   theme_void() -->\n\n<!-- ``` -->\n\n![](img/summarystats.png)\n\n## Five-number summary\n\n`Minimum`, `lower hinge`, `median`, `upper hinge` and `maximum`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(1234)\nmy.data <- rnorm(50, 100)\nfivenum(my.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  97.65430  99.00566  99.46477  99.98486 102.41584\n```\n:::\n\n```{.r .cell-code}\nsummary(my.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  97.65   99.01   99.46   99.55   99.96  102.42 \n```\n:::\n:::\n\n\n## Boxplots {.scrollable}\n\n-   Graphical display of 5-number summary\n-   Can show several groups of data on the same graph\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Cumulative frequency graphs\n\n-   Show the left tail area\n-   Useful to obtain the quantiles (deciles, percentiles, quartiles etc)\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nset.seed(123)\n\nd <- data.frame(\n  x = rnorm(50, 100)\n  )\n\nggplot(d) + \n  aes(x) + \n  stat_ecdf()\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n## Shiny apps\n\nLots of examples are available\n\n-   In the study guide and workshops for this course (though not all of them are working currently)\n-   On the web\n\n<https://shiny.massey.ac.nz/anhsmith/demos/explore.univariate.graphs/>\n\n<https://shiny.massey.ac.nz/anhsmith/demos/get.univariate.plots/>\n\n\n## Quantile-Quantile (Q-Q) plot\n\nQ-Q plots compare the distributions of two data sets by plotting their quantiles against each other.\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nvital <- read.table(\n  \"https://www.massey.ac.nz/~anhsmith/data/vital.txt\", \n  header=TRUE, sep=\",\")\n\nquants <- seq(0, 1, 0.05)\n\nvital |> \n  summarise(\n    Female = quantile(Life_female, quants),\n    Male = quantile(Life_male, quants)\n  ) |> \n  ggplot() +\n  aes(x = Female, y = Male) +\n  geom_point() + \n  geom_abline(slope=1, intercept=0) +\n  coord_fixed() +\n  ggtitle(\n    \"Quantiles of life expectancy\",\n    subtitle = \"are lower for males vs females\"\n    )\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n## Some Q-Q Plot patterns\n\n-   Case a: Quantiles of Y (mean/median etc) are higher than those of X\n\n-   Case b: Spread or SD of Y \\> spread or SD of X\n\n-   Case c: X and Y follow different distributions ![](./img/2_31.png)\n\n    -   R function: `qqplot()`.\n\n## Bivariate relationships\n\nA scatter plot shows the relationship between two quantitative variables. It can highlight linear or non-linear relationships, gaps/subgroups, outliers, etc. A `lowess` smoother or 2D density can help show the relationship.\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\np1 <- ggplot(horsehearts) +\n  aes(x = EXTSYS, y = WEIGHT) +\n  geom_point() + ggtitle(\"Scatterplot\")\n\np1 \n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-21-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n\n## Bivariate relationships\n\nA scatter plot shows the relationship between two quantitative variables. It can highlight linear or non-linear relationships, gaps/subgroups, outliers, etc. A `lowess` smoother or 2D density can help show the relationship.\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\np1 <- ggplot(horsehearts) +\n  aes(x = EXTSYS, y = WEIGHT) +\n  geom_point() + ggtitle(\"Scatterplot\")\n\np1 + \n  geom_smooth(span = 0.8, se = FALSE) + \n  ggtitle(\"Scatterplot with lowess smoother\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-22-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n\n## Bivariate relationships\n\nA scatter plot shows the relationship between two quantitative variables. It can highlight linear or non-linear relationships, gaps/subgroups, outliers, etc. A `lowess` smoother or 2D density can help show the relationship.\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\np1 <- ggplot(horsehearts) +\n  aes(x = EXTSYS, y = WEIGHT) +\n  geom_point() + ggtitle(\"Scatterplot\")\n\np1 + \n  geom_density_2d() +\n  ggtitle(\"Scatterplot with 2D density\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n## Marginal Plot\n\nShows both bivariate relationships and univariate (marginal) distributions\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\np1 <- ggplot(rangitikei) +\n  aes(x = people, y = vehicle) + \n  geom_point() + theme_bw()\n\nlibrary(ggExtra)\nggMarginal(p1, type=\"boxplot\")\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-25-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n\n## Pairs plot / scatterplot matrix\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nlibrary(GGally)\nggpairs(pinetree[,-1])\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-27-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n## Pairs plot with a grouping variable\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nlibrary(GGally)\nggpairs(pinetree[,-1], \n        aes(colour = pinetree$Area))\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-28-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n## Correlation coefficients\n\nThe Pearson correlation coefficient measures the **linear** association between two variables.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-29-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## Correlation Matrix {.scrollable}\n\n-   To show all pairwise correlation coefficients\n-   Useful to explore the inter-relationship between variables \\scriptsize\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nlibrary(psych)\ncorr.test(pinetree[,-1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:corr.test(x = pinetree[, -1])\nCorrelation matrix \n        Top Third Second First\nTop    1.00  0.92   0.96  0.97\nThird  0.92  1.00   0.95  0.91\nSecond 0.96  0.95   1.00  0.97\nFirst  0.97  0.91   0.97  1.00\nSample Size \n[1] 60\nProbability values (Entries above the diagonal are adjusted for multiple tests.) \n       Top Third Second First\nTop      0     0      0     0\nThird    0     0      0     0\nSecond   0     0      0     0\nFirst    0     0      0     0\n\n To see confidence intervals of the correlations, print with the short=FALSE option\n```\n:::\n:::\n\n\n## Correlation Plots\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nlibrary(corrplot)\ncorrplot(\n  cor(pinetree[,-1]),  \n  type = \"upper\", \n  method=\"number\"\n  )\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-31-1.png){fig-align='center' width=480}\n:::\n:::\n\n\n## Network plots\n\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nlibrary(corrr)\npinetree[,-1] |> \n  correlate() |> \n  network_plot(min_cor=0.2)\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-32-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n## 3-D Plots\n\nA bubble plot, shows the third (fourth) variable as point size (colour).\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\np1 <- ggplot(pinetree) +\n  aes(x = First, \n      y = Second,\n      size = Third) + \n  geom_point() +\n  ggtitle(\"Bubble plot\")\n\np1\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-33-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n\n## 3-D Plots\n\nA bubble plot, shows the third (fourth) variable as point size (colour).\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\np1 <- ggplot(pinetree) +\n  aes(x = First, \n      y = Second,\n      size = Third) + \n  geom_point() +\n  ggtitle(\"Bubble plot\")\n\np1 + aes(colour = Area)\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-34-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n## 3-D plots are far more useful if you can rotate them\n\nPackage `plot3D`\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nlibrary(\"plot3D\")\n\nscatter3D(\n  x = pinetree$First, \n  y = pinetree$Second, \n  z = pinetree$Top, \n  phi = 0, bty = \"g\", \n  ticktype =\"detailed\"\n  )\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-35-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n## 3-D plots are far more useful if you can rotate them\n\nPackage `plotly`\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nlibrary(plotly)\n\nplot_ly(\n  pinetree, \n  x = ~First, \n  y = ~Second, \n  z = ~Top\n  ) |> \n  add_markers()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-9fed18d622a76f1d8b9e\" style=\"width:576px;height:480px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9fed18d622a76f1d8b9e\">{\"x\":{\"visdat\":{\"649454ef5bab\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"649454ef5bab\",\"attrs\":{\"649454ef5bab\":{\"x\":{},\"y\":{},\"z\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\",\"mode\":\"markers\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"First\"},\"yaxis\":{\"title\":\"Second\"},\"zaxis\":{\"title\":\"Top\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[23.899999999999999,25.699999999999999,27.199999999999999,30,31.699999999999999,31.699999999999999,32.600000000000001,32.799999999999997,33.100000000000001,33.399999999999999,34.5,34.600000000000001,35.799999999999997,36.299999999999997,37.600000000000001,38,41.200000000000003,43.5,44.899999999999999,47.600000000000001,17.600000000000001,23.300000000000001,24.699999999999999,25.199999999999999,26.5,26.800000000000001,27.100000000000001,28,28.899999999999999,29.399999999999999,30.800000000000001,31.600000000000001,33.200000000000003,34.700000000000003,36.100000000000001,37.5,38.799999999999997,41.5,43.200000000000003,46.700000000000003,17.899999999999999,18.800000000000001,20.899999999999999,21.600000000000001,22.699999999999999,23.5,24.100000000000001,25.300000000000001,26.199999999999999,26.899999999999999,27.399999999999999,27.800000000000001,28.5,29.100000000000001,29.899999999999999,30.800000000000001,31.600000000000001,33.700000000000003,35.600000000000001,36.200000000000003],\"y\":[16.300000000000001,22.800000000000001,24.5,25.199999999999999,26.399999999999999,27.300000000000001,27.300000000000001,27.899999999999999,28.100000000000001,28.699999999999999,29,29.5,30.5,31.399999999999999,32.799999999999997,33.200000000000003,34.700000000000003,35.600000000000001,37.200000000000003,38,16.800000000000001,17.899999999999999,18.699999999999999,20.399999999999999,22.699999999999999,24.100000000000001,25.5,26.699999999999999,27.800000000000001,28.899999999999999,30.100000000000001,31.199999999999999,31.699999999999999,32.5,32.799999999999997,33.899999999999999,34.700000000000003,35.899999999999999,37.5,40.899999999999999,15.1,17.300000000000001,18.399999999999999,19.800000000000001,20.5,21.199999999999999,21.899999999999999,22.399999999999999,22.800000000000001,23.300000000000001,23.699999999999999,24.100000000000001,24.600000000000001,24.600000000000001,25.199999999999999,26.699999999999999,27.800000000000001,29.199999999999999,30.5,31.100000000000001],\"z\":[11.1,12.5,13.699999999999999,14.199999999999999,15,16.100000000000001,16.800000000000001,17.5,17.5,18.899999999999999,20.300000000000001,21.699999999999999,22.199999999999999,23.600000000000001,24.100000000000001,24.800000000000001,25.699999999999999,26.899999999999999,27.600000000000001,30.300000000000001,10.1,10.9,11.300000000000001,12.699999999999999,13.300000000000001,14.1,15,15.300000000000001,16.100000000000001,16.699999999999999,17.5,17.5,18.199999999999999,20.5,22.100000000000001,22.899999999999999,23.699999999999999,25.600000000000001,27.899999999999999,30,10.5,10.9,11.1,11.199999999999999,11.4,11.4,11.800000000000001,12.1,12.199999999999999,12.699999999999999,13.199999999999999,13.6,14.5,14.9,15.800000000000001,16.899999999999999,17.5,18.100000000000001,19.699999999999999,22.5],\"type\":\"scatter3d\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## Contour plots\n\n-   3D plots are difficult to interpret than 2D plots in general\n\n-   Contour plots are another way of looking three variables in two dimensions\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\nlibrary(plotly)\nplot_ly(type = 'contour', \n        x=pinetree$First, \n        y=pinetree$Second, \n        z=pinetree$Top)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-786d9d3fe28ddcdfc642\" style=\"width:576px;height:576px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-786d9d3fe28ddcdfc642\">{\"x\":{\"visdat\":{\"649459ad773f\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"649459ad773f\",\"attrs\":{\"649459ad773f\":{\"x\":[23.899999999999999,25.699999999999999,27.199999999999999,30,31.699999999999999,31.699999999999999,32.600000000000001,32.799999999999997,33.100000000000001,33.399999999999999,34.5,34.600000000000001,35.799999999999997,36.299999999999997,37.600000000000001,38,41.200000000000003,43.5,44.899999999999999,47.600000000000001,17.600000000000001,23.300000000000001,24.699999999999999,25.199999999999999,26.5,26.800000000000001,27.100000000000001,28,28.899999999999999,29.399999999999999,30.800000000000001,31.600000000000001,33.200000000000003,34.700000000000003,36.100000000000001,37.5,38.799999999999997,41.5,43.200000000000003,46.700000000000003,17.899999999999999,18.800000000000001,20.899999999999999,21.600000000000001,22.699999999999999,23.5,24.100000000000001,25.300000000000001,26.199999999999999,26.899999999999999,27.399999999999999,27.800000000000001,28.5,29.100000000000001,29.899999999999999,30.800000000000001,31.600000000000001,33.700000000000003,35.600000000000001,36.200000000000003],\"y\":[16.300000000000001,22.800000000000001,24.5,25.199999999999999,26.399999999999999,27.300000000000001,27.300000000000001,27.899999999999999,28.100000000000001,28.699999999999999,29,29.5,30.5,31.399999999999999,32.799999999999997,33.200000000000003,34.700000000000003,35.600000000000001,37.200000000000003,38,16.800000000000001,17.899999999999999,18.699999999999999,20.399999999999999,22.699999999999999,24.100000000000001,25.5,26.699999999999999,27.800000000000001,28.899999999999999,30.100000000000001,31.199999999999999,31.699999999999999,32.5,32.799999999999997,33.899999999999999,34.700000000000003,35.899999999999999,37.5,40.899999999999999,15.1,17.300000000000001,18.399999999999999,19.800000000000001,20.5,21.199999999999999,21.899999999999999,22.399999999999999,22.800000000000001,23.300000000000001,23.699999999999999,24.100000000000001,24.600000000000001,24.600000000000001,25.199999999999999,26.699999999999999,27.800000000000001,29.199999999999999,30.5,31.100000000000001],\"z\":[11.1,12.5,13.699999999999999,14.199999999999999,15,16.100000000000001,16.800000000000001,17.5,17.5,18.899999999999999,20.300000000000001,21.699999999999999,22.199999999999999,23.600000000000001,24.100000000000001,24.800000000000001,25.699999999999999,26.899999999999999,27.600000000000001,30.300000000000001,10.1,10.9,11.300000000000001,12.699999999999999,13.300000000000001,14.1,15,15.300000000000001,16.100000000000001,16.699999999999999,17.5,17.5,18.199999999999999,20.5,22.100000000000001,22.899999999999999,23.699999999999999,25.600000000000001,27.899999999999999,30,10.5,10.9,11.1,11.199999999999999,11.4,11.4,11.800000000000001,12.1,12.199999999999999,12.699999999999999,13.199999999999999,13.6,14.5,14.9,15.800000000000001,16.899999999999999,17.5,18.100000000000001,19.699999999999999,22.5],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"contour\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":[]},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":[]},\"scene\":{\"zaxis\":{\"title\":[]}},\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"colorbar\":{\"title\":\"\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666667\",\"rgba(70,19,97,1)\"],[\"0.0833333333333333\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":true,\"x\":[23.899999999999999,25.699999999999999,27.199999999999999,30,31.699999999999999,31.699999999999999,32.600000000000001,32.799999999999997,33.100000000000001,33.399999999999999,34.5,34.600000000000001,35.799999999999997,36.299999999999997,37.600000000000001,38,41.200000000000003,43.5,44.899999999999999,47.600000000000001,17.600000000000001,23.300000000000001,24.699999999999999,25.199999999999999,26.5,26.800000000000001,27.100000000000001,28,28.899999999999999,29.399999999999999,30.800000000000001,31.600000000000001,33.200000000000003,34.700000000000003,36.100000000000001,37.5,38.799999999999997,41.5,43.200000000000003,46.700000000000003,17.899999999999999,18.800000000000001,20.899999999999999,21.600000000000001,22.699999999999999,23.5,24.100000000000001,25.300000000000001,26.199999999999999,26.899999999999999,27.399999999999999,27.800000000000001,28.5,29.100000000000001,29.899999999999999,30.800000000000001,31.600000000000001,33.700000000000003,35.600000000000001,36.200000000000003],\"y\":[16.300000000000001,22.800000000000001,24.5,25.199999999999999,26.399999999999999,27.300000000000001,27.300000000000001,27.899999999999999,28.100000000000001,28.699999999999999,29,29.5,30.5,31.399999999999999,32.799999999999997,33.200000000000003,34.700000000000003,35.600000000000001,37.200000000000003,38,16.800000000000001,17.899999999999999,18.699999999999999,20.399999999999999,22.699999999999999,24.100000000000001,25.5,26.699999999999999,27.800000000000001,28.899999999999999,30.100000000000001,31.199999999999999,31.699999999999999,32.5,32.799999999999997,33.899999999999999,34.700000000000003,35.899999999999999,37.5,40.899999999999999,15.1,17.300000000000001,18.399999999999999,19.800000000000001,20.5,21.199999999999999,21.899999999999999,22.399999999999999,22.800000000000001,23.300000000000001,23.699999999999999,24.100000000000001,24.600000000000001,24.600000000000001,25.199999999999999,26.699999999999999,27.800000000000001,29.199999999999999,30.5,31.100000000000001],\"z\":[11.1,12.5,13.699999999999999,14.199999999999999,15,16.100000000000001,16.800000000000001,17.5,17.5,18.899999999999999,20.300000000000001,21.699999999999999,22.199999999999999,23.600000000000001,24.100000000000001,24.800000000000001,25.699999999999999,26.899999999999999,27.600000000000001,30.300000000000001,10.1,10.9,11.300000000000001,12.699999999999999,13.300000000000001,14.1,15,15.300000000000001,16.100000000000001,16.699999999999999,17.5,17.5,18.199999999999999,20.5,22.100000000000001,22.899999999999999,23.699999999999999,25.600000000000001,27.899999999999999,30,10.5,10.9,11.1,11.199999999999999,11.4,11.4,11.800000000000001,12.1,12.199999999999999,12.699999999999999,13.199999999999999,13.6,14.5,14.9,15.800000000000001,16.899999999999999,17.5,18.100000000000001,19.699999999999999,22.5],\"type\":\"contour\",\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n<!-- ```{r,  warning=FALSE, message=FALSE} -->\n<!-- # url1 <- \"https://www.massey.ac.nz/~anhsmith/data/pinetree.RData\" -->\n<!-- # download.file(url = url1, destfile = \"pinetree.RData\") -->\n<!-- # load(\"pinetree.RData\") -->\n<!-- attach(pinetree) -->\n\n<!-- my_mod <- lm(Top ~ First * Second) -->\n<!-- w.marginal <- seq(min(First), max(First), length.out = 50) -->\n<!-- t.marginal <- seq(min(Second), max(Second), length.out = 50) -->\n<!-- wtr.marginal <- list(First = w.marginal, Second = t.marginal) -->\n<!-- grid <- expand.grid(wtr.marginal) -->\n<!-- grid[, \"fit\"] <- c(predict(my_mod, grid)) -->\n<!-- lattice::contourplot(fit ~ First * Second , data = grid, -->\n<!--             cuts = 10, region = TRUE, -->\n<!--             xlab = \"First \", -->\n<!--             ylab = \"Second\", main=\"Top contour levels are shown\") -->\n<!-- # library(ggplot2) -->\n<!-- # ggplot(grid, aes(First, Second, z = fit)) + geom_contour(aes(colour = ..level..)) -->\n<!-- # ggplot(grid, aes(First, Second, z = fit)) + geom_contour() + metR::geom_label_contour() -->\n<!-- ``` -->\n\n## Conditioning plots\n\nConditioning Plots (Coplots) show two variables at different ranges of third variable\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\ncoplot(Top ~ First | Second*Area, \n       data = pinetree)\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-38-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n## Conditioning plots\n\nConditioning Plots (Coplots) show two variables at different ranges of third variable\n\n\n::: {.cell .custom3070 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\n# install.packages(\"remotes\")\n# remotes::install_github(\"mpru/ggcleveland\")\nlibrary(ggcleveland)\ngg_coplot(\n  pinetree, \n  x = First, \n  y = Top, \n  faceting = Second, \n  number_bins = 6, \n  overlap = 3/4\n  )\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-39-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n## More `R` graphs\n\nBuild plots in a single layout (R packages `patchwork` or `gridExtra`)\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell .custom4060 layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code}\np1 <- ggplot(testmarks) +\n  aes(y = English, x = Maths) + \n  geom_point()\n\np2 <- p1 + \n  stat_density_2d(\n    geom = \"raster\",\n    aes(fill = after_stat(density)),\n    contour = FALSE) + \n  scale_fill_viridis_c() + \n  guides(fill=FALSE)\n\nlibrary(patchwork)\np1 / p2\n```\n\n::: {.cell-output-display}\n![](Chapter02_files/figure-revealjs/unnamed-chunk-41-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n<!-- ## More `R` graphs -->\n\n<!-- - Plots produced using the ggplot system and the old style graphs can also be put together but not straight forward.  In the following example, a *lattice* package plot is combined with a ggplot-type error bar plot. -->\n\n<!-- ```{r} -->\n\n<!-- library(\"grid\") -->\n\n<!-- library(\"ggplotify\") -->\n\n<!-- library(\"lattice\") -->\n\n<!-- library(patchwork) -->\n\n<!-- # url1 <- \"https://www.massey.ac.nz/~anhsmith/data/pinetree.RData\" -->\n\n<!-- # download.file(url = url1, destfile = \"pinetree.RData\") -->\n\n<!-- # load(\"pinetree.RData\") -->\n\n<!-- p1 <- as.grob(bwplot(Top ~ Area, data = pinetree)) -->\n\n<!-- p1 <- as.ggplot(p1) -->\n\n<!-- library(ggpubr) -->\n\n<!-- p2 <- ggerrorplot(pinetree, x = \"Area\", y = \"Top\") -->\n\n<!-- p1/p2 +plot_annotation(title = 'Combining lattice and ggplot type plots') -->\n\n<!-- ``` -->\n\n<!-- - The focus of this course is to perform EDA and not spend lots of time coding.  Adopt the codes of others.  -->\n\n<!-- - There are hundreds of R packages and examples for graphing. So, develop basic skills of recycling the R codes for a new dataset. -->\n\n<!--  - More graphing is covered in the exercises (such as `plotly` type) -->\n\n\n## Learning EDA\n\n-   The best way to learn EDA is to try many approaches and find which are informative and which are not.\\\n\n-   Chatfield (1995) on tackling statistical problems:\n\n    -   Do not attempt to analyse the data until you understand what is being measured and why. Find out whether there is prior information such as are there any likely effects.\n    -   Find out how the data were collected.\n    -   Look at the structure of the data.\n    -   The data then need to be carefully examined in an exploratory way before attempting a more sophisticated analysis.\n    -   Use common sense, and be honest!\n\n## Summary\n\n-   **Size**\n\n    -   For small datasets, we cannot be too confident in any patterns we see. More likely for patterns to occur 'by chance'.\n    -   Some displays are more affected by sample size than others\n\n-   **Shape**\n\n    -   In can be interesting to display the overall shape of distribution.\n    -   Are there gaps and/or many peaks (modes)?\n    -   Is the distribution `symmetrical`? Is the distribution `normal`?\n\n-   **Outliers**\n\n    -   Boxplots & scatterplots can reveal outliers\n    -   More influential than points in the middle\n    \n\n-   Graphs should be simple and informative; certainly not misleading!\n\n<!-- ## Exercises -->\n\n<!-- download.file(\"<https://www.massey.ac.nz/~kgovinda/220exer/Chap2moreexamples.R>\", destfile=\"Chap2moreexamples.R\") -->\n\n<!-- download.file(\"<https://www.massey.ac.nz/~kgovinda/220exer/chapter-2-exercises.html>\", destfile=\"chapter-2-exercises.html\") -->\n\n<!-- install.packages(\"remotes\") -->\n\n<!-- remotes::install_github(\"ricompute/ricomisc\") -->\n\n<!-- ricomisc::rstudio_viewer(\"chapter-2-exercises.html\", file_path = NULL) -->\n",
    "supporting": [
      "Chapter02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<script src=\"../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\r\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}